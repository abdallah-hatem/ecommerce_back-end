generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // url      = env("DATABASE_URL") //local
  url      = env("POSTGRES_PRISMA_URL") //vercel
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String

  cart Cart[]
}

model Product {
  id       Int    @id @default(autoincrement())
  name     String
  price    Int
  desc     String
  quantity Int

  Category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  CartItem     CartItem[]
  SizeToColors SizeToColors[]
}

model Category {
  id   Int    @id @default(autoincrement())
  name String

  products Product[]
}

model CartItem {
  id       Int @id @default(autoincrement())
  quantity Int

  size    Sizes @relation(fields: [sizesId], references: [id])
  sizesId Int

  color    Colors @relation(fields: [colorsId], references: [id])
  colorsId Int

  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int

  Cart   Cart @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId Int
}

model Cart {
  id     Int  @id @default(autoincrement())
  User   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int

  cartItem CartItem[]
}

model Colors {
  id   Int    @id @default(autoincrement())
  name String
  hex  String

  SizeToColors SizeToColors[]
  CartItem     CartItem[]
}

model Sizes {
  id   Int    @id @default(autoincrement())
  name String

  SizeToColors SizeToColors[]
  CartItem     CartItem[]
}

model SizeToColors {
  id        Int     @id @default(autoincrement())
  porduct   Product @relation(fields: [productId], references: [id])
  productId Int

  size   Sizes @relation(fields: [sizeId], references: [id])
  sizeId Int

  colors Colors[]
}
